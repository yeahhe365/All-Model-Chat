请复制以下正确的代码到控制台：

第一步 - 加载修复工具：
fetch('./ultimate-proxy-fix.js').then(r=>r.text()).then(eval);

第二步 - 运行修复（请替换为您的API Key）：
UltimateProxyFix.ultimateFix("AIzaSyCUduSy8NLnF0hKWjgial1Qtm8YQ6-LKr0");

注意事项：
1. 确保文件名是 ultimate-proxy-fix.js（不是 ultimate-proxy-fix,js）
2. 确保箭头函数是 r=>r.text()（不是 r=r.text()）
3. 确保所有的引号都是英文引号 ' 或 "
4. 确保没有多余的空格或字符

如果还是不行，请尝试这个简化版本：

简化版本 - 直接运行修复代码：
// 设置代理配置
localStorage.setItem('app-settings', JSON.stringify({
    useCustomApiConfig: true,
    apiProxyUrl: 'https://api-proxy.me/gemini',
    apiKey: 'AIzaSyCUduSy8NLnF0hKWjgial1Qtm8YQ6-LKr0',
    modelId: 'gemini-2.5-flash',
    temperature: 0.7,
    topP: 0.9,
    systemInstruction: '',
    showThoughts: false,
    thinkingBudget: 0,
    language: 'system',
    baseFontSize: 14,
    isStreamingEnabled: true,
    isAutoScrollOnSendEnabled: true,
    isAutoTitleEnabled: true,
    expandCodeBlocksByDefault: false,
    isMermaidRenderingEnabled: true,
    isGraphvizRenderingEnabled: true,
    isAutoSendOnSuggestionClick: true,
    isTranscriptionThinkingEnabled: false,
    transcriptionModelId: 'gemini-2.5-flash',
    ttsVoice: 'Puck',
    themeId: 'system'
}));

// 拦截fetch函数
const originalFetch = window.fetch;
window.fetch = function(input, init = {}) {
    const url = typeof input === 'string' ? input : input.url;
    if (url && url.includes('generativelanguage.googleapis.com')) {
        const proxyUrl = url.replace('https://generativelanguage.googleapis.com/v1beta', 'https://api-proxy.me/gemini/v1beta');
        console.log('🔄 代理请求:', url, '->', proxyUrl);
        const newInput = typeof input === 'string' ? proxyUrl : new Request(proxyUrl, input);
        return originalFetch(newInput, init);
    }
    return originalFetch(input, init);
};

console.log('✅ 代理拦截器已激活，请刷新页面测试');